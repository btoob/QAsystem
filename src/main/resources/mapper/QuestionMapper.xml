<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryz.qasystem.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.ryz.qasystem.model.Question">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ryz.qasystem.model.Question">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <resultMap id="QuestionWithUser" type="com.ryz.qasystem.dto.QuestionDTO" extends="BaseResultMap">
    <association property="user" javaType="com.ryz.qasystem.model.User">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="email" jdbcType="VARCHAR" property="email" />
      <result column="user_face" jdbcType="VARCHAR" property="userFace" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, title, create_time, update_time, comment_count, view_count, like_count, tag, 
    user_id
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>

  <select id="getTotalReplyQuestionNums" resultType="java.lang.Long">
    SELECT count(1) FROM question WHERE comment_count!=0
  </select>
  <select id="getTotalNumQuestonByTag" resultType="java.lang.Long">
    select count(1) from question
    <where>
      <if test="tag != null and tag != ''">
        tag regexp #{tag}
      </if>
    </where>
  </select>
  <select id="getQuestionByTagByPage" resultMap="QuestionWithUser">
    select q.*, u.id, u.name, u.email, u.user_face, u.create_time, u.update_time
    from question q, user u
    <where>
      q.user_id=u.id
      <if test="tag != null and tag != ''">
        and q.tag regexp #{tag}
      </if>
      order by q.create_time desc
      <if test="page!=null and size!=null">
        limit #{page}, #{size}
      </if>
    </where>
  </select>
  <select id="getRelatedQuestionByTag" resultMap="QuestionWithUser" parameterType="String">
    select q.*, u.id, u.name, u.email, u.user_face, u.create_time, u.update_time
    from question q, user u
    <where>
      q.user_id=u.id
      <if test="tag != null and tag != ''">
       and q.tag regexp #{_parameter}
      </if>
    </where>
    order by q.create_time desc limit 10
  </select>
  <update id="incCommentCount" parameterType="com.ryz.qasystem.model.Question">
    update question set update_time=#{updateTime, jdbcType=TIMESTAMP},comment_count=#{commentCount, jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="incView" parameterType="com.ryz.qasystem.model.Question">
    update question set update_time=#{updateTime, jdbcType=TIMESTAMP},view_count=#{viewCount, jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllQuestionsByPage" resultMap="QuestionWithUser">
    select q.*, u.id, u.name, u.email, u.user_face, u.create_time, u.update_time
    from question q left join user u on q.user_id=u.id
    <if test=" search!=null and search != '' ">
      where question.title like concat('%',#{search},'%')
    </if>
    order by q.create_time desc
    <if test="page!=null and size!=null">
      limit #{page}, #{size}
    </if>
  </select>
  <select id="getNoReplyQuestionsByPage" resultMap="QuestionWithUser">
    SELECT q.*, q.comment_count+q.view_count AS qw, u.id, u.name, u.email, u.user_face, u.create_time, u.update_time
     from question q left join user u on q.user_id=u.id
    WHERE comment_count!=0
    ORDER BY qw DESC
    <if test="page!=null and size!=null">
      limit #{page}, #{size}
    </if>
  </select>
  <select id="getUserQuestionsByPage" resultMap="QuestionWithUser">
    select q.*, u.id, u.name, u.email, u.user_face, u.create_time, u.update_time
    from question q, user u where q.user_id=#{id} and q.user_id=u.id
    order by q.create_time desc
    <if test="page!=null and size!=null">
      limit #{page}, #{size}
    </if>
  </select>
  <select id="getTotalNumQueston" resultType="java.lang.Long">
    select count(1) from question
    <if test=" search!=null and search != '' ">
      where question.title like concat('%',#{search},'%')
    </if>
  </select>
  <select id="getTotalNumQuestonByUserId" resultType="java.lang.Long">
    select count(1) from question where user_id=#{id}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ryz.qasystem.model.Question">
    insert into question (id, title, create_time, 
      update_time, comment_count, view_count, 
      like_count, tag, user_id, 
      description)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{commentCount,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ryz.qasystem.model.Question">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryz.qasystem.model.Question">
    update question
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ryz.qasystem.model.Question">
    update question
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      comment_count = #{commentCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryz.qasystem.model.Question">
    update question
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      comment_count = #{commentCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>